#! python
# Data prep


def build(ctx):

    ctx(
        features='run_do_script',
        source='mt_programs.do'
        )

    # Prepare working data
    # ------------------------
    # TODO: 2015-07-08 - [ ] uses symlinked version of raw data from spot_epi
    # should fix this to work with safe mysql data
    ctx(
        name='cr_working',
        features='run_do_script',
        source='cr_working.do',
        target=[
            ctx.path_to(ctx, 'DATA', 'working_all.dta'),
            ctx.path_to(ctx, 'DATA', 'working.dta')
            ],
        deps=[
            ctx.path_to(ctx, 'DATA_ORIGINAL', 'working_raw_epi.dta')
        ]
    )

    # NOTE: 2015-07-13 - [ ] using waf then these run in parallel but both 
    # but given that they use the same labelling file then errors occur
    # Prepare sites
    # -------------
    ctx(
        features='run_do_script',
        source='cr_sites.do',
        target=[
            ctx.path_to(ctx, 'DATA', 'sites.dta')
            ]
    )
    # # Prepare units
    # # -------------
    # ctx(
    #     features='run_do_script',
    #     source='cr_units.do',
    #     target=[
    #         ctx.path_to(ctx, 'DATA', 'unitsFinal.dta')
    #         ]
    # )

    # # Prepare working_occupancy data
    # # ------------------------------
    # ctx(
    #     features='run_do_script',
    #     source='cr_preflight_occupancy.do',
    #     target=[
    #         ctx.path_to(ctx, 'DATA', 'working_occupancy.dta')
    #         ],
    #     deps=[
    #         ctx.path_to(ctx, 'DATA', 'working.dta'),
    #         ctx.path_to(ctx, 'DATA_ORIGINAL', 'working_occupancy24.dta')
    #     ]
    # )

    # # Prepare working version of tails
    # # ------------------------------
    # ctx(
    #     features='run_do_script',
    #     source='cr_working_tails.do',
    #     target=[
    #         ctx.path_to(ctx, 'DATA', 'working_tails.dta')
    #         ],
    #     deps=[
    #         ctx.path_to(ctx, 'DATA', 'working.dta')
    #     ]
    # )

    # # Prepare working_occ (as distinct from preflight_occ above)
    # ctx(
    #     features='run_do_script',
    #     source='cr_working_occ.do',
    #     target=[
    #         ctx.path_to(ctx, 'DATA', 'working_merge.dta')
    #         ],
    #     deps=[
    #         ctx.path_to(ctx, 'DATA', 'working.dta'),
    #         ctx.path_to(ctx, 'DATA', 'working_tails.dta'),
    #         ctx.path_to(ctx, 'DATA', 'unitsFinal.dta'),
    #         ctx.path_to(ctx, 'DATA', 'working_occupancy.dta')
    #     ]
    # )

    # # Prepare working_postflight
    # ctx(
    #     features='run_do_script',
    #     source='results_spotearly.do',
    #     target=[
    #         ctx.path_to(ctx, 'DATA', 'working_postflight.dta')
    #         ],
    #     deps=[
    #         ctx.path_to(ctx, 'DATA', 'working_merge.dta')
    #     ]
    # )

    # # Prepare survival (single record and long)
    # ctx(
    #     name='cr_survival.do',
    #     features='run_do_script',
    #     source='cr_survival.do',
    #     target=[
    #         ctx.path_to(ctx, 'DATA', 'working_survival_single.dta'),
    #         ctx.path_to(ctx, 'DATA', 'working_survival.dta')
    #         ],
    #     deps=[
    #         ctx.path_to(ctx, 'DATA', 'working_postflight.dta')
    #     ]
    # )

    # # TODO: 2015-07-21 - [ ] prepare to run results_spotearly.R
    # ctx(
    #     name='results_spotearly.R',
    #     features='run_r_script',
    #     source='results_spotearly.R',
    #     target=[
    #         ctx.path_to(ctx, 'DATA', 'paper-spotearly.RData')
    #         ],
    #     deps=[
    #         ctx.path_to(ctx, 'DATA', 'sites.dta'),
    #         ctx.path_to(ctx, 'DATA', 'unitsFinal.dta'),
    #         ctx.path_to(ctx, 'DATA', 'working_occupancy.dta'),
    #         ctx.path_to(ctx, 'DATA', 'working_postflight.dta')
    #     ]
    # )
